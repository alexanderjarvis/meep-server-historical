# This is the main configuration file for the application.
# ~~~~~
application.name=meep

# Application mode
# ~~~~~
# Set to dev to enable instant reloading and other development help.
# Otherwise set to prod.

application.mode=dev

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions
# If you deploy your application to several instances be sure to use the same key !
application.secret=fRrS7y8VvIxI2SC15RD3VNHO9djw9nOY5yp7na3bkc8tEN8sjnoTIFwhduz46Yc8

# Additional modules
# ~~~~~
# A module is another play! application. Add a line for each module you want
# to add to your application. Modules path are either absolutes or relative to
# the application root.
# They get loaded from top to bottom; Syntax: module.{name}={path}
#
# Keep the next line as is to help the play script to manage modules.
# ---- MODULES ----

# i18n
# ~~~~~
# Define locales used by your application.
# You can then place localized messages in conf/messages.{locale} files
# application.langs=fr,en,ja

# Date format
# ~~~~~
date.format=yyyy-MM-dd
# date.format.fr=dd/MM/yyyy

# Server configuration
# ~~~~~
# If you need to change the HTTP port, uncomment this (default is set to 9000)
http.port=9000
https.port=9443

%prod.http.port=80
%prod.https.port=443

# X509 certificates
certificate.key.file=conf/host.key
certificate.file=conf/host.cert

%prod.certificate.key.file=conf/meep.it.key
%prod.certificate.file=conf/meep.it.cert

# In case your key file is password protected
#certificate.password=

#
# By default the server listen for HTTP on the wilcard address.
# You can restrict this.
#http.address=127.0.0.1

# Session configuration
# ~~~~~~~~~~~~~~~~~~~~~~
# By default, session will be written to the transient PLAY_SESSION cookie.
# The cookies are not secured by default, only set it to true
# if you're serving your pages through https.
# application.session.cookie=PLAY
# application.session.maxAge=1h
# application.session.secure=false

# JVM configuration
# ~~~~~
# Define which port is used by JPDA when application is in debug mode (default is set to 8000)
# jpda.port=8000
#
# Java source level => 1.5, 1.6 or 1.7 (experimental)
# java.source=1.5

# Log level
# ~~~~~
# Specify log level for your application.
# If you want a very customized log, create a log4j.properties file in the conf directory
application.log=DEBUG
%prod.application.log=INFO
#
# More logging configuration
%prod.application.log.path=/prod-log4j.properties
# application.log.system.out=on

# Database configuration
# ~~~~~ 
# Enable a database engine if needed.
#
# To quickly set up a development database, use either:
#   - mem : for a transient in memory database (HSQL in memory)
#   - fs  : for a simple file written database (HSQL file stored)

# if db=mem then the url is property is overwritten and we want to set MVCC=TRUE
# to prevent the table lock timeout issue
db=mem

# To connect to a local MySQL5 database, use:
# db=mysql:user:pwd@database_name
#
# If you need a full JDBC configuration use the following :

%test.db.url=jdbc:h2:mem:play;MODE=MYSQL;DB_CLOSE_ON_EXIT=FALSE;LOCK_MODE=0

%prod.db.url=jdbc:mysql://localhost/meep
%prod.db.driver=com.mysql.jdbc.Driver
%prod.db.user=play
%prod.db.pass=fkLRYfpC&[&U

#
# Connections pool configuration :
# db.pool.timeout=1000
# db.pool.maxSize=30
# db.pool.minSize=10
#
# If you want to reuse an existing Datasource from your application server, use:
# db=java:/comp/env/jdbc/myDatasource

# JPA Configuration (Hibernate)
# ~~~~~
#
# Specify the custom JPA dialect to use here (default to guess):
# jpa.dialect=org.hibernate.dialect.PostgreSQLDialect
#
# Specify the ddl generation pattern to use. Set to none to disable it 
# (default to update in DEV mode, and none in PROD mode):
jpa.ddl=update
#jpa.ddl=create-update
#
# Debug SQL statements (logged using DEBUG level):
# jpa.debugSQL=true
#
# You can even specify additional hibernate properties here:
# hibernate.use_sql_comments=true
# ...
#
# Store path for Blob content
attachments.path=data/attachments

# Memcached configuration
# ~~~~~ 
# Enable memcached if needed. Otherwise a local cache is used.
# memcached=enabled
#
# Specify memcached host (default to 127.0.0.1:11211)
# memcached.host=127.0.0.1:11211
#
# Or you can specify multiple host to build a distributed cache
# memcached.1.host=127.0.0.1:11211
# memcached.2.host=127.0.0.1:11212

# HTTP Response headers control for static files
# ~~~~~
# Set the default max-age, telling the user's browser how long it should cache the page.
# Default is 3600 (one hour). Set it to 0 to send no-cache.
# This is only read in prod mode, in dev mode the cache is disabled.
# http.cacheControl=3600

# If enabled, Play will generate entity tags automatically and send a 304 when needed.
# Default is true, set it to false to deactivate use of entity tags.
# http.useETag=true

# Custom mime types
# mimetype.xpi=application/x-xpinstall

# WS configuration
# ~~~~~
# If you need to set proxy params for WS requests
# http.proxyHost = localhost
# http.proxyPort = 3128
# http.proxyUser = jojo
# http.proxyPassword = jojo

# Mail configuration
# ~~~~~ 
# Default is to use a mock Mailer
mail.smtp=mock

# Or, specify mail host configuration
%prod.mail.smtp=
%prod.mail.smtp.host=127.0.0.1
#%prod.mail.smtp.user=admin
#%prod.mail.smtp.pass=
#%prod.mail.smtp.channel=ssl

# Jobs executor
# ~~~~~~
# Size of the Jobs pool
# play.jobs.pool=10

# WAR options
# ~~~~~ 
# list the filenames to exclude from the war generation, separated by pipes (|), full matches only
war.exclude=.svn|.cvs

# Execution pool
# ~~~~~
# Default to 1 thread in DEV mode or (nb processors + 1) threads in PROD mode.
# Try to keep a low as possible. 1 thread will serialize all requests (very useful for debugging purpose)
# play.pool=3

# Open file from errors pages
# ~~~~~
# If your text editor supports opening files by URL, Play! will
# dynamically link error pages to files 
#
# Example, for textmate:
# play.editor=txmt://open?url=file://%s&line=%s

#
# Other non-standard Play properties
# ~~~~~

# Remove the HTTP header "Server: Play! Framework."
http.exposePlayServer=false

# Custom application properties
# ~~~~~
# Enable/disable the SSLCheckFilter.
ssl.required=false
%prod.ssl.required=true

# Enable/disable removal of cookies for Controllers using the NoCookieFilter.
cookies.enabled=false

# Enable/disable pretty printing of JSON
json.prettyprinting=true
%test.json.prettyprinting=false
%prod.json.prettyprinting=false

# The from address for the application to send emails from.
mails.fromaddress=Meep <noreply@meep.it>
